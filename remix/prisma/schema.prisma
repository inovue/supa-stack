datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}


model Stock {
  id Int @id @default(autoincrement())
  title String?
  content String?

  mediaBox MediaBox? @relation(fields:[mediaBoxId], references:[id])
  mediaBoxId Int?

  commentBoard CommentBoard? @relation(fields: [commentBoardId], references: [id])
  commentBoardId Int?

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
}

model MediaBox {
  id Int @id @default(autoincrement())

  stocks Stock[]
  medias Media[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
}

model Media {
  id Int @id @default(autoincrement())
  path String
  filename String
  contentType String
  
  caption String?

  mediaBox MediaBox? @relation(fields:[mediaBoxId], references:[id])
  mediaBoxId Int?

  commentBoard CommentBoard? @relation(fields: [commentBoardId], references: [id])
  commentBoardId Int?

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
}


model Comment {
  id Int @id @default(autoincrement())
  content String?

  author Author? @relation(fields: [authorId], references: [id])
  authorId  Int?

  commentBoard CommentBoard? @relation(fields: [commentBoardId], references: [id])
  commentBoardId Int?
  
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
}


model CommentBoard {
  id Int @id @default(autoincrement())
  name String?
  
  comments Comment[]

  stocks Stock[]
  medias Media[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
}


model Author {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  
  comments Comment[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
}